Using "add_integer"
=====================

"b" is defaulted to int "98"
all parameters must have int type
Return the sum of the parameters

Import "add_integer"

    >>> add_integer = __import__('0-add_integer').add_integer

1-
    >>> add_integer(2, 3)
    5

2-
    >>> add_integer(5, -1)
    4

3-
    >>> add_integer(2)
    100

4-
    >>> add_integer(2.1, 1)
    3

5-
    >>> add_integer(2, 'aa')
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

6-
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

8-
    >>> add_integer(-10.5, -2.5)
    -12

9-
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

7-
    >>> add_integer("aa", "bbb")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

8-
    >>> add_integer(1, float('nan'))
    Traceback (most recent call last)
    ...
    ValueError: can't convert float NaN to integer

9-
    >>> add_integer(1, 2, 3)
    Traceback (most recent call last)
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
